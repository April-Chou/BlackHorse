package blackhorse;
/*
 * 抽象类概述及其特点
 * 一. 抽象 就是看不懂
 * 
 * 二. 抽象类特点
 * 1. 抽象类和抽象方法必须用abstarct修饰
 * 2. 抽象类不一定要有抽象方法， 有抽象方法的类一定是抽象类或者是接口
 * 3. 抽象类不能实例化， 那么抽象类如何实例化呢？
 *    *按照多态的形式，由具体的子类实例化， 其实这也是多态的一种， 抽象类多态。
 * 4. 抽象类的子类
 *    *要么是抽象类
 *    要么重写抽象类中的所有的抽象方法
 *    
 * 三. 抽象类的成员特点
 *   1. 成员变量： 既可以是变量，也可以是常量。   abstract不能修饰成员变量
 *   2. 构造方法： 有。 用于子类访问父类数据的初始化
 *   3. 成员方法： 既可以是抽象的，也可以是非抽象的
 *   
 *   抽象类成员方法的特性：
 *   1. 抽象方法：  强制要求子类做事情
 *   2. 非抽象方法： 子类继承的事情，提高代码的复用性
 *   
 *   abstract不能和 static， 因为被abstract 修饰的方法没有方法体，static可以类名。调用，调用抽象方法没有意义
 *   
 *   final 也不能和 abstract 一起，abstract修饰的强制子类重写，final不能被子类重写
 *   
 *   private也不能： 被abstract修饰的是为了让子类看到并强制重写，private是为了不让子类访问，，所以是矛盾的
 *
 */
public class Demo_Abstract {

}

abstract class Demo{
	int num = 10;
	final int NUM_1 = 20;  //两个成员变量，既可以是变量也可以是常量，常量大写所有字母
	
	public Demo() {
		
	}                     //父类空参构造
	
	public abstract void method();    //子类不能拒城直接用，必须要重写
	
}
